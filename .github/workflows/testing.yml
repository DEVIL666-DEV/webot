name: Test Deployment

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.py'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.py'
  release:
    types: [ "published" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12.x", "3.13.x"]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    
    - name: Setup python environments
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup venv
      run: python3 -m venv venv

    - name: Install script dependencies
      run: |
        source venv/bin/activate
        python3 main.py --autoupdate

    - name: Write bot token
      run: echo "${{ secrets.CI_BOT_TOKEN }}" > bot_token.txt
    
    - name: Run script and wait for activation message
      run: |
        source venv/bin/activate
        timeout 60 python3 main.py --autoupdate &
        BOT_PID=$!
        
        # Wait for login message in logs
        for i in {1..30}; do
          if ps -p $BOT_PID > /dev/null; then
            if [[ -f "log/gift_solver.txt" ]] && grep -q "DdddOcr test classification successful" log/gift_solver.txt; then
              echo "Bot logged in successfully and OCR initialized!"
              kill $BOT_PID 2>/dev/null || true
              wait $BOT_PID 2>/dev/null || true
              exit 0
            fi
            sleep 2
          else
            echo "Bot process ended unexpectedly"
            exit 1
          fi
        done
          
          echo "Timeout waiting for bot login"
          kill $BOT_PID 2>/dev/null || true
          exit 1
